name: 'Autocomment-atime-results'
author: 'Anirban Chetia'
description: 'Autocomment atime-based performance regression analysis on PRs'
branding:
  icon: 'message-square'
  color: 'gray-dark'

inputs:
  github-token:
    description: 'GitHub token with write permissions to the repository'
    required: true

runs:
  using: "composite"
  steps:
    - name: Start timer
      run: echo "START_SETUP_TIME=$(date +%s)" >> $GITHUB_ENV
      shell: bash
      
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Safe directory exception
      run: |
        git config --global --add safe.directory '*'
      shell: bash

    # To ensure local branch references exist and can be found when using git2r::revparse_single: (for more information, please check https://github.com/Anirban166/Autocomment-atime-results/issues/33#issuecomment-2038431272 and the comments below that)
    - name: Retrieve branch references
      run: |
        # Fetch PR head directly into a local branch using GitHub's pull request refs
        git fetch origin pull/${{ github.event.pull_request.number }}/head:${{ github.head_ref }}
        # Ensure base ref is also available locally and switch to head branch
        git switch "${{ github.base_ref }}"
        git switch "${{ github.head_ref }}"
      shell: bash

    - name: R Setup
      uses: r-lib/actions/setup-r@v2
      with:
        use-public-rspm: true 

    - name: Get R library path
      run: |
        echo "R_LIB_PATH=$(Rscript -e 'cat(.libPaths()[1])')" >> $GITHUB_ENV
      shell: bash

    - name: Cache R library
      id: cache-r-lib
      uses: actions/cache@v4
      with:
        path: ${{ env.R_LIB_PATH }}
        key: r-lib-${{ runner.os }}-${{ hashFiles('DESCRIPTION') }}
        restore-keys: |
          r-lib-${{ runner.os }}-${{ hashFiles('DESCRIPTION') }}
          r-lib-${{ runner.os }}-

    - name: Install R packages (DESCRIPTION-specified deps)
      if: steps.cache-r-lib.outputs.cache-hit != 'true'
      uses: r-lib/actions/setup-r-dependencies@v2
      with:
        cache: false
        extra-packages: |
          atime
          ggplot2
          directlabels
          cumstats=?ignore

    - name: Cache libgit2
      id: cache-libgit2
      uses: actions/cache@v4
      with:
        path: |
          /usr/local/lib/libgit2*
          /usr/local/lib/pkgconfig/libgit2.pc
          /usr/local/include/git2*
          /usr/local/bin/git2
        key: libgit2-${{ runner.os }}-v1.6.4
        restore-keys: |
          libgit2-${{ runner.os }}-v1.6
          libgit2-${{ runner.os }}-

    - name: Install libgit2
      if: steps.cache-libgit2.outputs.cache-hit != 'true'
      run: |
        sudo apt-get update -y && sudo apt-get install -y cmake libssl-dev
        git clone --branch v1.6.4 --depth 1 https://github.com/libgit2/libgit2.git
        cd libgit2 && mkdir build && cd build
        cmake .. -DCMAKE_INSTALL_PREFIX=/usr
        make && sudo make install
        cd ../..
        sudo ldconfig # Refresh linker cache
      shell: bash

    - name: Run atime tests
      run: |
        mkdir -p ~/.R
        echo "CFLAGS = -std=gnu99" >> ~/.R/Makevars
        echo "options(repos = c(CRAN = 'https://cloud.r-project.org'))" >> .Rprofile
        echo "END_SETUP_START_TESTS_TIME=$(date +%s)" >> $GITHUB_ENV
        Rscript -e 'atime::atime_pkg(Sys.getenv("GITHUB_WORKSPACE"), tests.dir = ".ci");'
        echo "END_TESTS_TIME=$(date +%s)" >> $GITHUB_ENV
      shell: bash

    - name: Upload results
      id: artifact-upload-step
      uses: actions/upload-artifact@v4
      with:
        name: atime-results
        path: .ci/atime/

    - name: Setup CML
      uses: iterative/setup-cml@v2

    - name: Push generated plot along with relevant information on the PR thread as a GH-bot comment
      env:
        REPO_TOKEN: ${{ inputs.github-token }}
      run: |
        R_SETUP_DURATION=$((END_SETUP_START_TESTS_TIME - START_SETUP_TIME))
        VERSION_SETUP_DURATION=$(cut -d '.' -f 1 ./.ci/atime/install_seconds.txt)
        ATIME_TESTS_DURATION=$((END_TESTS_TIME - END_SETUP_START_TESTS_TIME - VERSION_SETUP_DURATION))

        formatTime() {
            local totalSeconds=$1
            if [ $totalSeconds -lt 0 ]; then
                echo "Time calculation error: negative duration"
                return
            fi
            if [ $totalSeconds -lt 60 ]; then
                echo "${totalSeconds} seconds"
            else
                local minutes=$((totalSeconds / 60))
                local seconds=$((totalSeconds % 60))
                echo "${minutes} minutes and ${seconds} seconds"
            fi
        }
        
        # Comment contents:
        cat .ci/atime/HEAD_issues.md >> report.md
        echo -e "\n[![Comparison Plot](./.ci/atime/tests_preview_facet.png)](./.ci/atime/tests_all_facet.png)" >> report.md
        echo -e "\nGenerated via commit ${{ github.event.pull_request.head.sha }}" >> report.md
        echo -e "\nDownload link for the artifact containing the test results: [â†“ atime-results.zip](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts/${{ steps.artifact-upload-step.outputs.artifact-id }})" >> report.md
        echo -e "\n| Task | Duration |" >> report.md
        echo -e "|---|---|" >> report.md
        echo -e "| R setup and installing dependencies   | $(formatTime $R_SETUP_DURATION)       |" >> report.md
        echo -e "| Installing different package versions | $(formatTime $VERSION_SETUP_DURATION) |" >> report.md
        echo -e "| Running and plotting the test cases   | $(formatTime $ATIME_TESTS_DURATION)   |" >> report.md
        cml comment update report.md
      shell: bash
